// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v2.2.4
//   protoc               v3.12.4
// source: kitchen.proto

/* eslint-disable */
import { GrpcMethod, GrpcStreamMethod } from "@nestjs/microservices";
import { Observable } from "rxjs";
import { Product } from "./inventory";

export const protobufPackage = "kitchen";

export interface Empty {
}

export interface RecipeID {
  id: number;
}

export interface Recipe {
  id: number;
  name: string;
  ingredients: Product[];
}

export interface RecipesList {
  recipes: RecipesList[];
}

export interface KitchenOrder {
  id: number;
  order: Recipe | undefined;
  createdAt: string;
  completedAt: string;
}

export interface Orders {
  orders: KitchenOrder[];
}

export const KITCHEN_PACKAGE_NAME = "kitchen";

export interface KitchenServiceClient {
  processOrder(request: RecipeID): Observable<KitchenOrder>;

  getOrders(request: Empty): Observable<Orders>;

  getRecipes(request: Empty): Observable<RecipesList>;
}

export interface KitchenServiceController {
  processOrder(request: RecipeID): Promise<KitchenOrder> | Observable<KitchenOrder> | KitchenOrder;

  getOrders(request: Empty): Promise<Orders> | Observable<Orders> | Orders;

  getRecipes(request: Empty): Promise<RecipesList> | Observable<RecipesList> | RecipesList;
}

export function KitchenServiceControllerMethods() {
  return function (constructor: Function) {
    const grpcMethods: string[] = ["processOrder", "getOrders", "getRecipes"];
    for (const method of grpcMethods) {
      const descriptor: any = Reflect.getOwnPropertyDescriptor(constructor.prototype, method);
      GrpcMethod("KitchenService", method)(constructor.prototype[method], method, descriptor);
    }
    const grpcStreamMethods: string[] = [];
    for (const method of grpcStreamMethods) {
      const descriptor: any = Reflect.getOwnPropertyDescriptor(constructor.prototype, method);
      GrpcStreamMethod("KitchenService", method)(constructor.prototype[method], method, descriptor);
    }
  };
}

export const KITCHEN_SERVICE_NAME = "KitchenService";
