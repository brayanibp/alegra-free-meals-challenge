// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v2.2.4
//   protoc               v3.12.4
// source: inventory.proto

/* eslint-disable */
import { GrpcMethod, GrpcStreamMethod } from "@nestjs/microservices";
import { Observable } from "rxjs";

export const protobufPackage = "inventory";

export interface Empty {
}

export interface ProductID {
  id: number;
}

export interface Product {
  id: number;
  name: string;
  amount: number;
}

export interface Inventory {
  list: Product[];
}

export interface InventoryHistoryPoint {
  id: number;
  list: Product[];
  createdAt: string;
}

export interface InventoryHistory {
  history: InventoryHistoryPoint[];
}

export interface IsAvailable {
  isAvailable: boolean;
}

export const INVENTORY_PACKAGE_NAME = "inventory";

export interface InventoryServiceClient {
  getInventory(request: Empty): Observable<Inventory>;

  refillProduct(request: ProductID): Observable<Product>;

  checkForAvailability(request: Product): Observable<IsAvailable>;

  setInventoryHistoryPoint(request: Inventory): Observable<InventoryHistoryPoint>;

  getInventoryHistory(request: Empty): Observable<InventoryHistory>;
}

export interface InventoryServiceController {
  getInventory(request: Empty): Promise<Inventory> | Observable<Inventory> | Inventory;

  refillProduct(request: ProductID): Promise<Product> | Observable<Product> | Product;

  checkForAvailability(request: Product): Promise<IsAvailable> | Observable<IsAvailable> | IsAvailable;

  setInventoryHistoryPoint(
    request: Inventory,
  ): Promise<InventoryHistoryPoint> | Observable<InventoryHistoryPoint> | InventoryHistoryPoint;

  getInventoryHistory(request: Empty): Promise<InventoryHistory> | Observable<InventoryHistory> | InventoryHistory;
}

export function InventoryServiceControllerMethods() {
  return function (constructor: Function) {
    const grpcMethods: string[] = [
      "getInventory",
      "refillProduct",
      "checkForAvailability",
      "setInventoryHistoryPoint",
      "getInventoryHistory",
    ];
    for (const method of grpcMethods) {
      const descriptor: any = Reflect.getOwnPropertyDescriptor(constructor.prototype, method);
      GrpcMethod("InventoryService", method)(constructor.prototype[method], method, descriptor);
    }
    const grpcStreamMethods: string[] = [];
    for (const method of grpcStreamMethods) {
      const descriptor: any = Reflect.getOwnPropertyDescriptor(constructor.prototype, method);
      GrpcStreamMethod("InventoryService", method)(constructor.prototype[method], method, descriptor);
    }
  };
}

export const INVENTORY_SERVICE_NAME = "InventoryService";
